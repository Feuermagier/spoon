#!/usr/bin/env python3

import subprocess
import sys
import time
from pathlib import Path
from typing import List


def time_exec(repo_path: Path, args: List[str]) -> float:
    """ Runs a given program and returns execution time."""
    start = time.time()
    subprocess.run(
        args,
        cwd=repo_path,
        stdout=sys.stderr,
        stderr=sys.stderr,
        check=True,
    )
    end = time.time()
    return end - start


def setup_javadocapi(repo_path: Path) -> None:
    subprocess.run(
        ["git", "clone", "https://github.com/I-Al-Istannen/JavadocApi"],
        cwd=repo_path,
        stdout=sys.stderr,
        stderr=sys.stderr,
        check=True
    )
    subprocess.run(
        ["mvn", "package"],
        cwd=repo_path / "JavadocApi",
        stdout=sys.stderr,
        stderr=sys.stderr,
        check=True
    )


def time_javadocapi(repo_path: Path) -> float:
    return time_exec(
        repo_path / "JavadocApi",
        [
            "java",
            "-jar",
            "target/JavadocApi.jar",
            "src/main/resources/spoon-bench-config.json"
        ]
    )


if __name__ == '__main__':
    repo_path = Path(sys.argv[1]).resolve()

    setup_javadocapi(repo_path)

    # Throw away first measurement
    # time_javadocapi(repo_path)

    runtime = time_javadocapi(repo_path)

    print("""
    {
        "javadoc-api": {
            "spoon-index": {
               "unit": "seconds",
                "interpretation": "LESS_IS_BETTER",
                "values": [{time}]
            }
        }
    }""".replace("{time}", str(round(runtime, 2))))
